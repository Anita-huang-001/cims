<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mi.cims.dao.RoleInfoMapper">
  <resultMap id="BaseResultMap" type="com.mi.cims.bean.po.RoleInfo">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, create_time, create_user_id, update_time, update_user_id
  </sql>
	<!-- 查询用户所拥有的全部角色信息 -->
	<select id="selectUserInfoAll" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		from role_info
		WHERE role_id IN
		<foreach collection="array" item="roleId" index="index" open="(" close=")" separator=",">
		  #{roleId}
		</foreach>
	</select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_info
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role_info
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mi.cims.bean.po.RoleInfo" useGeneratedKeys="true"  keyProperty="roleId">
    insert into role_info (role_id, role_name, create_time, 
      create_user_id, update_time, update_user_id
      )
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{createUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=BIGINT}, #{updateUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mi.cims.bean.po.RoleInfo">
    insert into role_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mi.cims.bean.po.RoleInfo">
    update role_info
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mi.cims.bean.po.RoleInfo">
    update role_info
    set role_name = #{roleName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=BIGINT},
      update_user_id = #{updateUserId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
  <!-- 查询所有角色 -->
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_info 
    <!-- 排除超级管理员角色 -->
    where role_id != 1 order by role_id not in(5)
  </select>

  <!-- 模糊查询符合条件的角色列表 -->
<!--   <select id="selectByGetRoleInfoBo" resultMap="BaseResultMap" parameterType="com.mi.cims.bean.bo.GetRoleInfoBo">
    select 
    <include refid="Base_Column_List" />
    from role_info
    <where>
        <if test="roleName != null" > 
          role_name like concat('%',replace(replace(#{roleName,jdbcType=VARCHAR},'\\','\\\\'),'%','\\%'),'%' ) and 
        </if>
        排除超级管理员角色
    	role_id != 1
    </where>
    order by update_time desc
  </select> -->
  <!-- 根据角色名称查询角色信息 -->
  <select id="selectByRoleName" parameterType="java.lang.String" resultMap="BaseResultMap">
	select
	<include refid="Base_Column_List" />
	from role_info
	where role_name = #{roleName,jdbcType=VARCHAR}
	<!-- 排除超级管理员角色 -->
	and role_id != 1
  </select>
   <!-- 查询角色(局长,科长,科员) -->
  <select id="selectAllFa" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_info
    <!-- 排除超级管理员角色和市级 -->
    where role_id != 1 and role_id != 5
  </select>
  <!-- 查询角色(市级) -->
  <select id="selectAllSe" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_info
    <!-- 排除超级管理员角色和局长科长科员 -->
    where role_id = 5
  </select>
</mapper>