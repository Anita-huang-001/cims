<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 日志级别 -->
    <property name="log.root.level" value="INFO" />
    <!-- 日志文件的保存路径 -->
    <property name="log.base" value="/var/log/mitec" />
    <!-- 错误日志文件名称 -->
    <property name="error.log" value="${log.base}/auth_error" />
    <!-- 错误日志文件归档名称 -->
    <property name="error.log.archive" value="${log.base}/auth_error_archive/auth_error" />
    <!-- 通知日志文件名称 -->
    <property name="info.log" value="${log.base}/auth_info" />
    <!-- 通知日志文件归档名称 -->
    <property name="info.log.archive" value="${log.base}/auth_info_archive/auth_info" />
    <!-- 调试日志文件名称 -->
    <property name="debug.log" value="${log.base}/auth_debug" />
    <!-- 调试日志文件归档名称 -->
    <property name="debug.log.archive" value="${log.base}/auth_debug_archive/auth_debug" />
    
    <!-- 控制台输出 -->  
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">  
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">  
            <Pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n</Pattern>  
        </encoder>  
    </appender>
    
    <!-- 错误日志文件输出 -->
	<appender name="file.error" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 日志文件名称 -->
		<file>${error.log}.log</file>
		<!-- 基于时间和大小的日志策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 每天一归档 -->
			<fileNamePattern>${error.log.archive}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<!-- 单个日志文件最大大小 -->
			<maxFileSize>20MB</maxFileSize>
			<!-- 日志保存周期（天） -->
			<maxHistory>60</maxHistory>
			<!-- 日志文件最大大小 -->
			<totalSizeCap>10GB</totalSizeCap>
		</rollingPolicy>
		<!-- 日志文件内容格式 -->
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n</pattern>
		</encoder>
		<!-- 只输出错误日志 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	
	<!-- 通知日志文件输出 -->
	<appender name="file.info" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 日志文件名称 -->
		<file>${info.log}.log</file>
		<!-- 基于时间和大小的日志策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 每天一归档 -->
			<fileNamePattern>${info.log.archive}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<!-- 单个日志文件最大大小 -->
			<maxFileSize>20MB</maxFileSize>
			<!-- 日志保存周期（天） -->
			<maxHistory>60</maxHistory>
			<!-- 日志文件最大大小 -->
			<totalSizeCap>10GB</totalSizeCap>
		</rollingPolicy>
		<!-- 日志文件内容格式 -->
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n</pattern>
		</encoder>
		<!-- 只输出通知日志 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	
	<!-- 调试日志文件输出 -->
	<appender name="file.debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 日志文件名称 -->
		<file>${debug.log}.log</file>
		<!-- 基于时间和大小的日志策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 每天一归档 -->
			<fileNamePattern>${debug.log.archive}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<!-- 单个日志文件最大大小 -->
			<maxFileSize>20MB</maxFileSize>
			<!-- 日志保存周期（天） -->
			<maxHistory>60</maxHistory>
			<!-- 日志文件最大大小 -->
			<totalSizeCap>10GB</totalSizeCap>
		</rollingPolicy>
		<!-- 日志文件内容格式 -->
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n</pattern>
		</encoder>
		<!-- 只输出通知日志 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	
	<!-- 根日志输出配置 -->
	<root level="${log.root.level}">
		<appender-ref ref="stdout" />
		<appender-ref ref="file.error" />
	</root>
	
	<!-- 特定包下日志输出配置 -->
	<logger name="com.mi.gm" level="${log.root.level}">  
        <appender-ref ref="file.info" />
		<appender-ref ref="file.debug" />
    </logger> 
</configuration>